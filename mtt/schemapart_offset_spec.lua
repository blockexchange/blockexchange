mtt.register("get_schemapart_offset, returns the proper coordinates", function(callback)
	local offset, offset_max = blockexchange.get_schemapart_offset({x=10,y=10,z=10}, {x=10,y=10,z=10})
	assert(offset)
	assert(0 == offset.x)
	assert(0 == offset.y)
	assert(0 == offset.z)
	assert(offset_max)
	assert(15 == offset_max.x)
	assert(15 == offset_max.y)
	assert(15 == offset_max.z)

	offset, offset_max = blockexchange.get_schemapart_offset({x=10,y=10,z=10}, {x=11,y=11,z=11})
	assert(offset)
	assert(0 == offset.x)
	assert(0 == offset.y)
	assert(0 == offset.z)
	assert(offset_max)
	assert(15 == offset_max.x)
	assert(15 == offset_max.y)
	assert(15 == offset_max.z)

	offset, offset_max = blockexchange.get_schemapart_offset({x=1000,y=10,z=10}, {x=1011,y=11,z=11})
	assert(offset)
	assert(0 == offset.x)
	assert(0 == offset.y)
	assert(0 == offset.z)
	assert(offset_max)
	assert(15 == offset_max.x)
	assert(15 == offset_max.y)
	assert(15 == offset_max.z)

	offset, offset_max = blockexchange.get_schemapart_offset({x=1000,y=10,z=10}, {x=1016,y=11,z=11})
	assert(offset)
	assert(16 == offset.x)
	assert(0 == offset.y)
	assert(0 == offset.z)
	assert(offset_max)
	assert(31 == offset_max.x)
	assert(15 == offset_max.y)
	assert(15 == offset_max.z)

	callback()
end)

mtt.register("get_schemapart_offset, returns the proper negative coordinates", function(callback)
	local offset, offset_max = blockexchange.get_schemapart_offset({x=10,y=10,z=10}, {x=9,y=9,z=9})
	assert(offset)
	assert(-16 == offset.x)
	assert(-16 == offset.y)
	assert(-16 == offset.z)
	assert(offset_max)
	assert(-1 == offset_max.x)
	assert(-1 == offset_max.y)
	assert(-1 == offset_max.z)

	callback()
end)
